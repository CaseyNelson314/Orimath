<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:Orimath.Basics.View.ViewModels;assembly=Orimath.Basics.View"
             xmlns:ctrl="clr-namespace:Orimath.Basics.View.Controls;assembly=Orimath.Basics.View"
             xmlns:local="clr-namespace:Orimath.Basics.View.Controls;assembly=Orimath.Basics.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignData Type={x:Type vm:WorkspaceViewModel}}">
    <UserControl.Resources>
        <ctrl:MouseHandler x:Key="mouseHandler" />
        <SolidColorBrush x:Key="selectionColor" Color="#7FFF69B4" />
        <local:UniversalColorConverter x:Key="CudConverter" />
        <ItemsPanelTemplate x:Key="CanvasItemsPanel">
            <Canvas />
        </ItemsPanelTemplate>

        <ControlTemplate TargetType="{x:Type Control}" x:Key="PointControlTemplate">
            <Grid>
                <Ellipse Width="4" Height="4" Margin="-2,-2,-2,-2"
                         Fill="{x:Static Brushes.White}"
                         Stroke="{x:Static Brushes.Black}"
                         StrokeThickness="1" />
                <Ellipse Width="12" Height="12" Margin="-6,-6,-6,-6" Fill="{TemplateBinding Foreground}" />
            </Grid>
        </ControlTemplate>
        <Style TargetType="{x:Type Control}" x:Key="StandardPointStyle">
            <Setter Property="Foreground" Value="{x:Static Brushes.Transparent}" />
            <Setter Property="Template" Value="{StaticResource PointControlTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{x:Static Brushes.Firebrick}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate DataType="{x:Type vm:PointViewModel}" x:Key="PointTemplate">
            <Control Style="{StaticResource StandardPointStyle}"
                     ToolTip="{Binding Mode=OneTime}"
                     Tag="{x:Static Brushes.Firebrick}"
                     AllowDrop="True"
                     ctrl:MouseHandler.AttachedMouseHandler="{StaticResource mouseHandler}" />
        </DataTemplate>
        <DataTemplate x:Key="SelectedPointTemplate">
            <Ellipse Width="16" Height="16" Margin="-8" Fill="{StaticResource selectionColor}" />
        </DataTemplate>

        <Style TargetType="{x:Type Line}" x:Key="LineStyle">
            <Setter Property="StrokeStartLineCap" Value="Round" />
            <Setter Property="StrokeEndLineCap" Value="Round" />
            <Setter Property="StrokeThickness" Value="2" />
        </Style>
        <Style TargetType="{x:Type ctrl:LineControl}">
            <Setter Property="Foreground" Value="{x:Static Brushes.Black}" />
            <Setter Property="StrokeThickness" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ctrl:LineControl}">
                        <Grid>
                            <Line Stroke="{TemplateBinding Foreground}"
                                  StrokeThickness="{TemplateBinding StrokeThickness}"
                                  StrokeStartLineCap="Round"
                                  StrokeEndLineCap="Round"
                                  X1="{TemplateBinding X1}"
                                  X2="{TemplateBinding X2}"
                                  Y1="{TemplateBinding Y1}"
                                  Y2="{TemplateBinding Y2}" />
                            <Line Stroke="{x:Static Brushes.Transparent}"
                                  StrokeThickness="12"
                                  StrokeStartLineCap="Round"
                                  StrokeEndLineCap="Round"
                                  X1="{TemplateBinding X1}"
                                  X2="{TemplateBinding X2}"
                                  Y1="{TemplateBinding Y1}"
                                  Y2="{TemplateBinding Y2}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{x:Static Brushes.Firebrick}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ctrl:LineControl}" BasedOn="{StaticResource {x:Type ctrl:LineControl}}"
               x:Key="CreaseStyle">
            <Setter Property="Foreground" Value="{Binding Color, Mode=OneTime, Converter={StaticResource CudConverter}}" />
        </Style>
        <DataTemplate DataType="{x:Type vm:LineViewModel}" x:Key="LineTemplate">
            <ctrl:LineControl Style="{StaticResource CreaseStyle}"
                              ToolTip="{Binding Mode=OneTime}"
                              X1="{Binding X1, Mode=OneTime}"
                              X2="{Binding X2, Mode=OneTime}"
                              Y1="{Binding Y1, Mode=OneTime}"
                              Y2="{Binding Y2, Mode=OneTime}"
                              StrokeThickness="2"
                              Tag="{x:Static Brushes.Firebrick}"
                              AllowDrop="True"
                              ctrl:MouseHandler.AttachedMouseHandler="{StaticResource mouseHandler}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:EdgeViewModel}" x:Key="EdgeTemplate">
            <ctrl:LineControl ToolTip="{Binding Mode=OneTime}"
                              X1="{Binding X1, Mode=OneTime}"
                              X2="{Binding X2, Mode=OneTime}"
                              Y1="{Binding Y1, Mode=OneTime}"
                              Y2="{Binding Y2, Mode=OneTime}"
                              StrokeThickness="3"
                              Tag="{x:Static Brushes.Firebrick}"
                              AllowDrop="True"
                              ctrl:MouseHandler.AttachedMouseHandler="{StaticResource mouseHandler}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:LineViewModel}" x:Key="SelectedLineTemplate">
            <Line X1="{Binding X1, Mode=OneTime}"
                  X2="{Binding X2, Mode=OneTime}"
                  Y1="{Binding Y1, Mode=OneTime}"
                  Y2="{Binding Y2, Mode=OneTime}"
                  StrokeThickness="8"
                  StrokeStartLineCap="Round"
                  StrokeEndLineCap="Round"
                  Stroke="{StaticResource selectionColor}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:EdgeViewModel}" x:Key="SelectedEdgeTemplate">
            <Line X1="{Binding X1, Mode=OneTime}"
                  X2="{Binding X2, Mode=OneTime}"
                  Y1="{Binding Y1, Mode=OneTime}"
                  Y2="{Binding Y2, Mode=OneTime}"
                  StrokeThickness="8"
                  StrokeStartLineCap="Round"
                  StrokeEndLineCap="Round"
                  Stroke="{StaticResource selectionColor}" />
        </DataTemplate>

        <Style TargetType="{x:Type ctrl:PolygonControl}">
            <Setter Property="Foreground" Value="{x:Static Brushes.White}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ctrl:PolygonControl}">
                        <Polygon Fill="{TemplateBinding Foreground}"
                                 Points="{TemplateBinding Points}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate DataType="{x:Type vm:LayerViewModel}" x:Key="LayerTemplate">
            <Grid>
                <ctrl:PolygonControl x:Name="Polygon"
                                     Points="{Binding Vertexes, Mode=OneTime}"
                                     AllowDrop="True"
                                     ctrl:MouseHandler.AttachedMouseHandler="{StaticResource mouseHandler}" />
                <ItemsControl ItemsSource="{Binding Edges, Mode=OneTime}"
                              ItemTemplate="{StaticResource EdgeTemplate}"
                              ItemsPanel="{StaticResource CanvasItemsPanel}" />
                <ItemsControl ItemsSource="{Binding Lines, Mode=OneTime}"
                              ItemTemplate="{StaticResource LineTemplate}"
                              ItemsPanel="{StaticResource CanvasItemsPanel}" />
                <ItemsControl ItemsSource="{Binding Points, Mode=OneTime}"
                              ItemTemplate="{StaticResource PointTemplate}"
                              ItemsPanel="{StaticResource CanvasItemsPanel}">
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <Setter Property="Canvas.Left" Value="{Binding X, Mode=OneTime}" />
                            <Setter Property="Canvas.Top" Value="{Binding Y, Mode=OneTime}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding LayerType}" Value="FrontSide">
                    <Setter TargetName="Polygon" Property="Foreground" Value="{x:Static Brushes.Bisque}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:LayerViewModel}" x:Key="SelectedLayerTemplate">
            <Polygon Points="{Binding Vertexes, Mode=OneTime}"
                     Fill="{x:Static Brushes.Pink}" />
        </DataTemplate>
    </UserControl.Resources>
    <Grid Background="{x:Static Brushes.Gainsboro}"
          ctrl:MouseHandler.RootMouseHandler="{StaticResource mouseHandler}">
        <ItemsControl ItemsSource="{Binding Paper.Layers, Mode=OneTime}"
                      ItemTemplate="{StaticResource LayerTemplate}"
                      ItemsPanel="{StaticResource CanvasItemsPanel}" />
        <ItemsControl ItemsSource="{Binding Paper.SelectedLayers.Value, Mode=OneWay}"
                      ItemTemplate="{StaticResource SelectedLayerTemplate}"
                      ItemsPanel="{StaticResource CanvasItemsPanel}"
                      IsHitTestVisible="False"/>
        <ItemsControl ItemsSource="{Binding Paper.SelectedLines.Value, Mode=OneWay}"
                      ItemTemplate="{StaticResource SelectedLineTemplate}"
                      ItemsPanel="{StaticResource CanvasItemsPanel}"
                      IsHitTestVisible="False"/>
        <ItemsControl ItemsSource="{Binding Paper.SelectedEdges.Value, Mode=OneWay}"
                      ItemTemplate="{StaticResource SelectedEdgeTemplate}"
                      ItemsPanel="{StaticResource CanvasItemsPanel}"
                      IsHitTestVisible="False"/>
        <ItemsControl ItemsSource="{Binding Paper.SelectedPoints.Value, Mode=OneWay}"
                      ItemTemplate="{StaticResource SelectedPointTemplate}"
                      ItemsPanel="{StaticResource CanvasItemsPanel}"
                      IsHitTestVisible="False">
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="{x:Type ContentPresenter}">
                    <Setter Property="Canvas.Left" Value="{Binding X, Mode=OneTime}" />
                    <Setter Property="Canvas.Top" Value="{Binding Y, Mode=OneTime}" />
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
    </Grid>
</UserControl>
