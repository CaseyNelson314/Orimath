<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Orimath.Basics.View.Controls;assembly=Orimath.Basics.View"
             xmlns:vm="clr-namespace:Orimath.Basics.View.ViewModels;assembly=Orimath.Basics.View"
             xmlns:th="clr-namespace:Orimath.Themes;assembly=Orimath.ViewPlugins"
             mc:Ignorable="d"
             d:Height="450" d:Width="800"
             d:DataContext="{d:DesignData Type={x:Type vm:InstructionListDialogViewModel}}">
    <UserControl.Resources>
        <ControlTemplate TargetType="{x:Type CheckBox}" x:Key="OverlapCheckBoxTemplate">
            <Grid Background="{TemplateBinding Background}"
                  SnapsToDevicePixels="True">
                <ContentPresenter Margin="{TemplateBinding Padding}"
                                  Content="{TemplateBinding Content}" 
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  RecognizesAccessKey="True" />
                <Border x:Name="Border"
                        Width="14" Height="14"
                        SnapsToDevicePixels="True"
                        BorderThickness="1"
                        Margin="4"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Right"
                        BorderBrush="{Binding Path=(th:ThemeBrush.Theme).Normal.Border, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Background="{Binding Path=(th:ThemeBrush.Theme).Normal.Background, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Path Visibility="Collapsed"
                          Width="10"
                          Height="10"
                          x:Name="CheckMark"
                          SnapsToDevicePixels="False"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          StrokeLineJoin="Miter"
                          Data="M 1,4 L 5,8 L 9,1"
                          StrokeThickness="2"
                          Stroke="{Binding Path=(th:ThemeBrush.Theme).Normal.Foreground, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(th:ThemeBrush.Theme).Hovered.Border, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    <Setter TargetName="Border" Property="Background" Value="{Binding Path=(th:ThemeBrush.Theme).Hovered.Background, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    <Setter TargetName="CheckMark" Property="Stroke" Value="{Binding Path=(th:ThemeBrush.Theme).Hovered.Foreground, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(th:ThemeBrush.Theme).Hovered.Border, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    <Setter TargetName="Border" Property="Background" Value="{Binding Path=(th:ThemeBrush.Theme).Hovered.Background, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    <Setter TargetName="CheckMark" Property="Stroke" Value="{Binding Path=(th:ThemeBrush.Theme).Hovered.Foreground, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(th:ThemeBrush.Theme).Highlight.Border, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    <Setter TargetName="Border" Property="Background" Value="{Binding Path=(th:ThemeBrush.Theme).Highlight.Background, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    <Setter TargetName="CheckMark" Property="Stroke" Value="{Binding Path=(th:ThemeBrush.Theme).Highlight.Foreground, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(th:ThemeBrush.Theme).Disabled.Border, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    <Setter TargetName="Border" Property="Background" Value="{Binding Path=(th:ThemeBrush.Theme).Disabled.Background, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    <Setter TargetName="CheckMark" Property="Stroke" Value="{Binding Path=(th:ThemeBrush.Theme).Disabled.Foreground, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>
    <Grid Margin="8" Background="{th:ThemeBrush Workspace.Normal.Background}"
          VerticalAlignment="Center">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Label Grid.Row="0" Content="{Binding Header, Mode=OneTime}" />
        <ScrollViewer Grid.Row="1"
                      HorizontalScrollBarVisibility="Disabled"
                      VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding Images, Mode=OneTime}"
                          Background="{th:ThemeBrush Workspace.Alternated.Background}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type vm:InstructionItemViewModel}">
                        <CheckBox IsChecked="{Binding IsExportTarget.Value, Mode=TwoWay}"
                                    Template="{StaticResource OverlapCheckBoxTemplate}"
                                    HorizontalContentAlignment="Right"
                                    VerticalContentAlignment="Top"
                                    Margin="1"
                                    Background="{th:ThemeBrush Workspace.Normal.Background}">
                            <local:PixelScaleImage Source="{Binding Image.Value, Mode=OneWay}"
                                                   Stretch="None" />
                        </CheckBox>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
        <Expander Grid.Row="2" Header="{Binding SettingText, Mode=OneTime}" IsExpanded="True">
            <StackPanel Orientation="Horizontal">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Margin="2" Text="{Binding MarginText, Mode=OneTime}" />
                    <TextBox Grid.Row="0" Grid.Column="1" Margin="2" Text="{Binding Margin.Value, Mode=TwoWay}" />
                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="2" Text="{Binding PaperSizeText, Mode=OneTime}" />
                    <TextBox Grid.Row="1" Grid.Column="1" Margin="2" Text="{Binding PaperSize.Value, Mode=TwoWay}" />
                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="2" Text="{Binding IndexFontSizeText, Mode=OneTime}" />
                    <TextBox Grid.Row="2" Grid.Column="1" Margin="2" Text="{Binding IndexFontSize.Value, Mode=TwoWay}" />
                    <TextBlock Grid.Row="3" Grid.Column="0" Margin="2" Text="{Binding IndexOffsetText, Mode=OneTime}" />
                    <TextBox Grid.Row="3" Grid.Column="1" Margin="2" Text="{Binding IndexOffset.Value, Mode=TwoWay}" />
                    <Button Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2"
                        Margin="2"
                        Content="{Binding RegenerateText, Mode=OneTime}"
                        Command="{Binding UpdateImageCommand, Mode=OneTime}" />
                </Grid>
                <Grid Margin="24,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Margin="2" Text="{Binding ColumnCountText, Mode=OneTime}" />
                    <TextBox Grid.Row="0" Grid.Column="1" Margin="2" Text="{Binding ColumnCount.Value, Mode=TwoWay}" />
                    <Button Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                            Margin="2"
                            Content="{Binding ExportSinglePngText, Mode=OneTime}"
                            Command="{Binding ExportSinglePngCommand, Mode=OneTime}" />
                    <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                            Margin="2"
                            Content="{Binding ExportSingleSvgText, Mode=OneTime}"
                            Command="{Binding ExportSingleSvgCommand, Mode=OneTime}" />
                    <Button Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
                            Margin="2"
                            Content="{Binding ExportIndexedPngText, Mode=OneTime}"
                            Command="{Binding ExportIndexedPngCommand, Mode=OneTime}" />
                    <Button Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2"
                            Margin="2"
                            Content="{Binding ExportIndexedSvgText, Mode=OneTime}"
                            Command="{Binding ExportIndexedSvgCommand, Mode=OneTime}" />
                </Grid>
            </StackPanel>
        </Expander>
        <Button Grid.Row="3" Content="{Binding CloseText, Mode=OneTime}" Width="80" Margin="2"
                Command="{Binding CloseCommand, Mode=OneTime}"
                HorizontalAlignment="Right" />
    </Grid>
</UserControl>
